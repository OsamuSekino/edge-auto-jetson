- name: Confirm locale
  block:
    - name: Generate locale files
      ansible.builtin.command:
        cmd: locale-gen en_US en_US.UTF-8
    - name: Update locale settings
      ansible.builtin.command:
        cmd: update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8
  become: true

- name: Fix python interpreter version to 3
  set_fact:
    ansible_python_interpreter: /usr/bin/python3.8

- name: Prepare Jetson scripts
  block:
    - name: Define directory name
      set_fact:
        jetson_script_dir: "{{ ansible_env.HOME }}/jetson_scripts"
    - name: Create directory
      ansible.builtin.file:
        path: "{{ jetson_script_dir }}"
        state: directory
    - name: Define file name
      set_fact:
        opencv_install_deps_script: "{{ jetson_script_dir }}/opencv_install_deps.sh"
    - name: Define file name
      set_fact:
        opencv_install_script: "{{ jetson_script_dir }}/opencv_install.sh"
    - name: Define file name
      set_fact:
        ros2_build_script: "{{ jetson_script_dir }}/ros2_build.sh"
    - name: Download OpenCV deps script
      ansible.builtin.get_url:
        url: https://raw.githubusercontent.com/dusty-nv/jetson-containers/L4T-R35.3.1/scripts/opencv_install_deps.sh
        dest: "{{ opencv_install_deps_script }}"
    - name: Download OpenCV install script
      ansible.builtin.get_url:
        url: https://raw.githubusercontent.com/dusty-nv/jetson-containers/L4T-R35.3.1/scripts/opencv_install.sh
        dest: "{{ opencv_install_script }}"
    - name: Download ROS2 Humble install script
      ansible.builtin.get_url:
        url: https://raw.githubusercontent.com/dusty-nv/jetson-containers/L4T-R35.3.1/scripts/ros2_build.sh
        dest: "{{ ros2_build_script }}"

- name: Install dependencies
  block:
    - name: Install jetpack
      ansible.builtin.apt:
        name:
          - nvidia-jetpack
        install_recommends: false
        update_cache: true
    - name: Install OpenCV deps
      ansible.builtin.command:
        cmd: "{{ opencv_install_deps_script }}"
    - name: Install PCL deps
      ansible.builtin.apt:
        name:
          - libflann-dev
          - libboost-filesystem-dev
          - libboost-date-time-dev
          - libboost-iostreams-dev
        install_recommends: false
        update_cache: true
  become: true

- name: Install PCL
  block:
    - name: Define directory name
      set_fact:
        pcl_directory: "{{ ansible_env.HOME }}/pcl"
    - name: Create build directory
      ansible.builtin.file:
        path: pcl_directory
    - name: Download and extract PCL 1.12.1 source
      ansible.builtin.unarchive:
        url: https://github.com/PointCloudLibrary/pcl/releases/download/pcl-1.12.1/source.tar.gz
        dest: "{{ pcl_directory }}"
        remote_src: yes
    - name: Create build directory
      ansible.builtin.file:
        path: "{{ pcl_directory }}/pcl/build"
        state: directory
    - name: Run cmake
      ansible.builtin.command:
        cmd: cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_CUDA_COMPILER=/usr/local/cuda/bin/nvcc ..
        chdir: "{{ pcl_directory }}/pcl/build"
      environment:
        PATH: "/usr/local/cuda/bin:{{ ansible_env.PATH }}"
    - name: Install PCL
      ansible.builtin.command:
        cmd: make -j7 install
        chdir: "{{ pcl_directory }}/pcl/build"
      become: true

- name: Install OpenCV
  ansible.builtin.command:
    cmd: "{{ opencv_install_script }} {{ opencv_url }} {{ opencv_deb }}"

- name: Build ROS2 Humble
  ansible.builtin.command:
    cmd: "{{ ros2_build_script }}"
  environment:
    ROS_DISTRO: "{{ ros_distro }}"
    ROS_PKG: ros_base
    ROS_ROOT: "/opt/ros/{{ ros_distro }}"

- name: Install extra edge-auto-jetson dependency
  ansible.builtin.apt:
    name: libtheora-dev
    install_recommends: false
    update_cache: true
  become: true
